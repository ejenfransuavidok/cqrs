<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:axon="http://www.axonframework.org/schema/core"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                http://www.springframework.org/schema/beans/spring-beans.xsd
                http://www.springframework.org/schema/context
                http://www.springframework.org/schema/context/spring-context.xsd
                http://www.springframework.org/schema/mvc
                http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.axonframework.org/schema/core http://www.axonframework.org/schema/axon-core.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <context:annotation-config/>

    <tx:annotation-driven transaction-manager="transactionManager"/>

    <axon:cluster id="async">
        <bean class="org.axonframework.eventhandling.async.AsynchronousCluster">
            <constructor-arg value="async"/>
            <constructor-arg ref="asyncExecutor"/>
            <constructor-arg>
                <bean class="org.axonframework.eventhandling.async.FullConcurrencyPolicy"/>
            </constructor-arg>
        </bean>
        <axon:selectors>
            <axon:package prefix="cqrs.example.shoppingcart.eventhandler"/>
        </axon:selectors>
    </axon:cluster>

    <axon:cluster id="simple" default="true"/>

    <bean id="asyncExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolExecutorFactoryBean">
        <property name="corePoolSize" value="1"/>
        <property name="waitForTasksToCompleteOnShutdown" value="true"/>
    </bean>

    <!-- shoppingCartDomain -->
    <axon:command-bus id="commandBus" transaction-manager="transactionManager" />
    <axon:command-bus id="commandBusDomainA" transaction-manager="transactionManager" />
    <axon:command-bus id="commandBusDomainB" transaction-manager="transactionManager" />
    <axon:event-bus id="eventBus"/>
    <axon:event-sourcing-repository id="shoppingCartRepository"
                                    aggregate-type="cqrs.example.shoppingcart.model.shoppingcart.ShoppingCart"/>

    <axon:aggregate-command-handler id="ShoppingCartHandler"
                                    aggregate-type="cqrs.example.shoppingcart.model.shoppingcart.ShoppingCart"
                                    repository="shoppingCartRepository"
                                    command-bus="commandBus"/>
    <bean class="org.axonframework.eventhandling.annotation.AnnotationEventListenerBeanPostProcessor">
        <property name="eventBus" ref="eventBus"/>
    </bean>
    <bean class="org.axonframework.commandhandling.annotation.AnnotationCommandHandlerBeanPostProcessor">
        <property name="commandBus" ref="commandBus"/>
    </bean>
    <bean name="commandGatewayShoppingCart" class="org.axonframework.commandhandling.gateway.CommandGatewayFactoryBean">
        <property name="commandBus" ref="commandBus"/>
    </bean>
    <bean name="commandGatewayDomainA" class="org.axonframework.commandhandling.gateway.CommandGatewayFactoryBean">
        <property name="commandBus" ref="commandBusDomainA"/>
    </bean>
    <bean name="commandGatewayDomainB" class="org.axonframework.commandhandling.gateway.CommandGatewayFactoryBean">
        <property name="commandBus" ref="commandBusDomainB"/>
    </bean>
    <!-- end -->
    <!-- domainA -->
    <axon:event-sourcing-repository id="aggregatorA1Repository"
                                    aggregate-type="cqrs.example.shoppingcart.model.domainA.AggregatorA1"/>
    <axon:event-sourcing-repository id="aggregatorA2Repository"
                                    aggregate-type="cqrs.example.shoppingcart.model.domainA.AggregatorA2"/>
    <axon:event-sourcing-repository id="aggregatorA3Repository"
                                    aggregate-type="cqrs.example.shoppingcart.model.domainA.AggregatorA3"/>
    <axon:aggregate-command-handler id="DomainA1Handler"
                                    aggregate-type="cqrs.example.shoppingcart.model.domainA.AggregatorA1"
                                    repository="aggregatorA1Repository"
                                    command-bus="commandBusDomainA" />
    <axon:aggregate-command-handler id="DomainA2Handler"
                                    aggregate-type="cqrs.example.shoppingcart.model.domainA.AggregatorA2"
                                    repository="aggregatorA2Repository"
                                    command-bus="commandBusDomainA" />
    <axon:aggregate-command-handler id="DomainA3Handler"
                                    aggregate-type="cqrs.example.shoppingcart.model.domainA.AggregatorA3"
                                    repository="aggregatorA3Repository"
                                    command-bus="commandBusDomainA" />
    <!-- end     -->

    <!-- domainB -->
    <axon:event-sourcing-repository id="aggregatorB1Repository"
                                    aggregate-type="cqrs.example.shoppingcart.model.domainB.AggregatorB1"/>
    <axon:event-sourcing-repository id="aggregatorB2Repository"
                                    aggregate-type="cqrs.example.shoppingcart.model.domainB.AggregatorB2"/>
    <axon:event-sourcing-repository id="aggregatorB3Repository"
                                    aggregate-type="cqrs.example.shoppingcart.model.domainB.AggregatorB3"/>
    <axon:aggregate-command-handler id="DomainB1Handler"
                                    aggregate-type="cqrs.example.shoppingcart.model.domainB.AggregatorB1"
                                    repository="aggregatorB1Repository"
                                    command-bus="commandBusDomainB" />
    <axon:aggregate-command-handler id="DomainB2Handler"
                                    aggregate-type="cqrs.example.shoppingcart.model.domainB.AggregatorB2"
                                    repository="aggregatorA2Repository"
                                    command-bus="commandBusDomainB" />
    <axon:aggregate-command-handler id="DomainB3Handler"
                                    aggregate-type="cqrs.example.shoppingcart.model.domainB.AggregatorB3"
                                    repository="aggregatorB3Repository"
                                    command-bus="commandBusDomainB" />
    <!-- end     -->

    <axon:jpa-event-store id="eventStore" entity-manager-provider="myEntityManagerProvider"
                          event-serializer="eventSerializer" max-snapshots-archived="2" batch-size="1000"/>

    <bean id="myEntityManagerProvider" class="org.axonframework.common.jpa.ContainerManagedEntityManagerProvider" />

    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="packagesToScan" value="org.axonframework.eventstore.jpa"/>
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="database" value="H2" />
                <property name="generateDdl" value="true"/>
                <property name="showSql" value="true"/>
            </bean>
        </property>
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.hbm2ddl.auto">create-drop</prop>
                <prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQL9Dialect</prop>
            </props>
        </property>
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="org.postgresql.Driver"/>
        <property name="url" value="jdbc:postgresql://localhost:5432/eventstoredb"/>
        <property name="username" value="postgres"/>
        <property name="password" value="root"/>
    </bean>

    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="eventSerializer" class="org.axonframework.serializer.xml.XStreamSerializer"/>

    <bean id="eventListener" class="cqrs.example.shoppingcart.eventhandler.ShoppingCartEventListener"/>

    <bean class="cqrs.example.shoppingcart.model.shoppingcart.ShoppingCart"/>

    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <context:component-scan base-package="cqrs.example.shoppingcart.controllers"/>

    <mvc:resources mapping="/resources/**" location="/resources/"/>

    <mvc:annotation-driven/>

</beans>

